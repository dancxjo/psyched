name = "voice"
description = "Text-to-speech pipeline"

[pilot]
display_name = "Voice"
description = "Text-to-speech synthesis"
regimes = ["audio"]

[[pilot.topics]]
name = "/voice"
type = "std_msgs/msg/String"
access = "rw"
presentation = "voice"
qos = { history = "keep_last", depth = 10, reliability = "reliable", durability = "volatile" }

[[pilot.topics]]
name = "/voice/interrupt"
type = "std_msgs/msg/Empty"
access = "wo"
presentation = "voice-control"
qos = { history = "keep_last", depth = 1, reliability = "reliable", durability = "volatile" }

[[pilot.topics]]
name = "/voice/resume"
type = "std_msgs/msg/Empty"
access = "wo"
presentation = "voice-control"
qos = { history = "keep_last", depth = 1, reliability = "reliable", durability = "volatile" }

[[pilot.topics]]
name = "/voice/clear"
type = "std_msgs/msg/Empty"
access = "wo"
presentation = "voice-control"
qos = { history = "keep_last", depth = 1, reliability = "reliable", durability = "volatile" }

[[pilot.topics]]
name = "/voice/volume"
type = "std_msgs/msg/UInt8"
access = "wo"
presentation = "voice-volume"
qos = { history = "keep_last", depth = 5, reliability = "reliable", durability = "volatile" }

[[pilot.topics]]
name = "/voice_done"
type = "std_msgs/msg/Empty"
access = "ro"
presentation = "event-log"
qos = { history = "keep_last", depth = 5, reliability = "reliable", durability = "volatile" }

[[pilot.topics]]
name = "/voice_interrupt"
type = "std_msgs/msg/Empty"
access = "ro"
presentation = "event-log"
qos = { history = "keep_last", depth = 5, reliability = "reliable", durability = "volatile" }

[[actions]]
type = "link_packages"
packages = ["voice"]

[[actions]]
type = "link_packages"
base = "../chat/packages"
packages = ["psyched_msgs"]

[[actions]]
type = "apt_install"
packages = [
    "espeak-ng",
    "mbrola",
    "mbrola-en1",
    "ffmpeg",
    "fortune-mod",
    "fortunes",
    "fortunes-min",
]
update = false

[[actions]]
type = "pip_install"
packages = ["pyttsx3"]
import_check = ["pyttsx3"]
break_system = true

[systemd]
description = "Psyched Voice"
after = ["network.target"]
restart = "on-failure"
restart_sec = 4
launch_command = "${MODULE_DIR}/voice.launch.sh"
shutdown_command = "${MODULE_DIR}/voice.shutdown.sh"

{
  "version": 1,
  "actions": [
    {
      "name": "battery_charge_stream",
      "description": "Stream battery charge readings (Ah) from battery/charge.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/charge",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "battery_capacity_stream",
      "description": "Stream reported pack capacity (Ah) from battery/capacity.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/capacity",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "battery_charge_ratio_stream",
      "description": "Stream relative charge level (0-1) from battery/charge_ratio.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/charge_ratio",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "battery_voltage_stream",
      "description": "Stream instantaneous battery voltage from battery/voltage.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/voltage",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "battery_current_stream",
      "description": "Stream measured battery current draw from battery/current.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/current",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "battery_temperature_stream",
      "description": "Stream pack temperature readings from battery/temperature.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/temperature",
        "message_type": "std_msgs/msg/Int16",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "battery_charging_state_stream",
      "description": "Stream Create charging state transitions from battery/charging_state.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "battery/charging_state",
        "message_type": "create_msgs/msg/ChargingState",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "bumper_stream",
      "description": "Stream bumper contact events published on bumper.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "bumper",
        "message_type": "create_msgs/msg/Bumper",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "cliff_stream",
      "description": "Stream cliff sensor state transitions from cliff.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "cliff",
        "message_type": "create_msgs/msg/Cliff",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "wheeldrop_stream",
      "description": "Stream wheel drop notifications from wheeldrop.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "wheeldrop",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "clean_button_stream",
      "description": "Stream clean button press events from clean_button.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "clean_button",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "spot_button_stream",
      "description": "Stream spot button press events from spot_button.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "spot_button",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "dock_button_stream",
      "description": "Stream dock button press events from dock_button.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "dock_button",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "day_button_stream",
      "description": "Stream day scheduling button events from day_button.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "day_button",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "hour_button_stream",
      "description": "Stream hour scheduling button events from hour_button.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "hour_button",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "minute_button_stream",
      "description": "Stream minute scheduling button events from minute_button.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "minute_button",
        "message_type": "std_msgs/msg/Empty",
        "role": "subscribe",
        "queue_length": 5
      }
    },
    {
      "name": "ir_omni_stream",
      "description": "Stream omni-directional IR sensor values from ir_omni.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "ir_omni",
        "message_type": "std_msgs/msg/UInt16",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "joint_states_stream",
      "description": "Stream joint_states published by the Create driver.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "joint_states",
        "message_type": "sensor_msgs/msg/JointState",
        "role": "subscribe",
        "queue_length": 20
      }
    },
    {
      "name": "mode_stream",
      "description": "Stream Create operating mode messages from mode.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "mode",
        "message_type": "create_msgs/msg/Mode",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "odom_stream",
      "description": "Stream nav_msgs/Odometry messages from odom.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "odom",
        "message_type": "nav_msgs/msg/Odometry",
        "role": "subscribe",
        "queue_length": 40
      }
    },
    {
      "name": "main_brush_motor_stream",
      "description": "Stream main brush motor current readings from main_brush_motor.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "main_brush_motor",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "side_brush_motor_stream",
      "description": "Stream side brush motor current readings from side_brush_motor.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "side_brush_motor",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "vacuum_motor_stream",
      "description": "Stream vacuum motor current readings from vacuum_motor.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "vacuum_motor",
        "message_type": "std_msgs/msg/Float32",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "diagnostics_stream",
      "description": "Stream diagnostic_msgs/DiagnosticArray updates from diagnostics.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "diagnostics",
        "message_type": "diagnostic_msgs/msg/DiagnosticArray",
        "role": "subscribe",
        "queue_length": 20
      }
    },
    {
      "name": "parameter_events_stream",
      "description": "Stream parameter events emitted on parameter_events.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "parameter_events",
        "message_type": "rcl_interfaces/msg/ParameterEvent",
        "role": "subscribe",
        "queue_length": 20
      }
    },
    {
      "name": "tf_stream",
      "description": "Stream TF transforms broadcast on tf for the base frame.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "tf",
        "message_type": "tf2_msgs/msg/TFMessage",
        "role": "subscribe",
        "queue_length": 50
      }
    },
    {
      "name": "tf_static_stream",
      "description": "Stream static TF transforms broadcast on tf_static.",
      "kind": "stream-topic",
      "defaults": {
        "topic": "tf_static",
        "message_type": "tf2_msgs/msg/TFMessage",
        "role": "subscribe",
        "queue_length": 10
      }
    },
    {
      "name": "cmd_vel_text",
      "description": "Parse a natural-language velocity command or component overrides into /cmd_vel geometry_msgs/msg/Twist output.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "cmd_vel",
        "message_type": "geometry_msgs/msg/Twist",
        "payload": {
          "linear": {"x": 0.0, "y": 0.0, "z": 0.0},
          "angular": {"x": 0.0, "y": 0.0, "z": 0.0}
        },
        "text_parser": "twist/v1",
        "text_argument": "command",
        "payload_map": {
          "command": null,
          "linear_x": "linear.x",
          "linear_y": "linear.y",
          "linear_z": "linear.z",
          "angular_x": "angular.x",
          "angular_y": "angular.y",
          "angular_z": "angular.z"
        }
      },
      "parameters": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "minLength": 1,
            "description": "Text command such as 'forward 0.2 turn_left 0.5'. Aliases like vx=0.1 or wz=-0.2 are also supported."
          },
          "linear_x": {
            "type": "number",
            "description": "Optional direct override for linear.x in m/s."
          },
          "linear_y": {
            "type": "number",
            "description": "Optional direct override for linear.y in m/s."
          },
          "linear_z": {
            "type": "number",
            "description": "Optional direct override for linear.z in m/s."
          },
          "angular_x": {
            "type": "number",
            "description": "Optional direct override for angular.x in rad/s."
          },
          "angular_y": {
            "type": "number",
            "description": "Optional direct override for angular.y in rad/s."
          },
          "angular_z": {
            "type": "number",
            "description": "Optional direct override for angular.z in rad/s."
          }
        },
        "additionalProperties": false
      },
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "cmd_vel_stop",
      "description": "Publish a zeroed geometry_msgs/msg/Twist to stop the Create base.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "cmd_vel",
        "message_type": "geometry_msgs/msg/Twist",
        "payload": {
          "linear": {"x": 0.0, "y": 0.0, "z": 0.0},
          "angular": {"x": 0.0, "y": 0.0, "z": 0.0}
        }
      },
      "parameters": {"type": "object", "additionalProperties": false},
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "dock",
      "description": "Command the Create base to begin docking.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "dock",
        "message_type": "std_msgs/msg/Empty",
        "payload": {}
      },
      "parameters": {"type": "object", "additionalProperties": false},
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "undock",
      "description": "Command the Create base to depart from the dock.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "undock",
        "message_type": "std_msgs/msg/Empty",
        "payload": {}
      },
      "parameters": {"type": "object", "additionalProperties": false},
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "clean_button",
      "description": "Simulate pressing the Create base clean button.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "clean_button",
        "message_type": "std_msgs/msg/Empty",
        "payload": {}
      },
      "parameters": {"type": "object", "additionalProperties": false},
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "spot_button",
      "description": "Simulate pressing the Create base spot button.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "spot_button",
        "message_type": "std_msgs/msg/Empty",
        "payload": {}
      },
      "parameters": {"type": "object", "additionalProperties": false},
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "dock_button",
      "description": "Simulate pressing the Create base dock button.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "dock_button",
        "message_type": "std_msgs/msg/Empty",
        "payload": {}
      },
      "parameters": {"type": "object", "additionalProperties": false},
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "set_ascii_text",
      "description": "Update the Create vacuum ASCII display (up to four characters).",
      "kind": "publish-topic",
      "defaults": {
        "topic": "set_ascii",
        "message_type": "std_msgs/msg/UInt8MultiArray",
        "payload": {"data": []},
        "text_parser": "ascii/v1",
        "text_argument": "text",
        "payload_map": {"text": null}
      },
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "maxLength": 4,
            "description": "Display text to render (characters beyond the first four are ignored)."
          }
        },
        "required": ["text"],
        "additionalProperties": false
      },
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "set_power_led",
      "description": "Set the Create base power LED colour (0=green..255=red) and intensity.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "power_led",
        "message_type": "std_msgs/msg/UInt8MultiArray",
        "payload": {"data": [0, 128]},
        "payload_map": {
          "color": "data[0]",
          "intensity": "data[1]"
        }
      },
      "parameters": {
        "type": "object",
        "properties": {
          "color": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255,
            "description": "Colour value where 0 is green and 255 is red."
          },
          "intensity": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255,
            "description": "Brightness value (0-255)."
          }
        },
        "required": ["color", "intensity"],
        "additionalProperties": false
      },
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "define_song",
      "description": "Program a song slot on the Create drive base using MIDI note values and durations.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "define_song",
        "message_type": "create_msgs/msg/DefineSong",
        "payload_map": {
          "song": "song",
          "length": "length",
          "notes": "notes",
          "durations": "durations"
        }
      },
      "parameters": {
        "type": "object",
        "properties": {
          "song": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4,
            "description": "Song slot to program on the Create base. Valid IDs are 0-4."
          },
          "length": {
            "type": "integer",
            "minimum": 1,
            "maximum": 16,
            "description": "Number of notes in the song. Must match the length of the notes and durations arrays."
          },
          "notes": {
            "type": "array",
            "minItems": 1,
            "maxItems": 16,
            "items": {
              "type": "integer",
              "minimum": 30,
              "maximum": 127
            },
            "description": "MIDI note numbers for each step. Use 30 to insert a rest."
          },
          "durations": {
            "type": "array",
            "minItems": 1,
            "maxItems": 16,
            "items": {
              "type": "number",
              "minimum": 0,
              "maximum": 3.9844
            },
            "description": "Durations in seconds for each note. Maximum value is 255/64 (~3.98s)."
          }
        },
        "required": ["song", "length", "notes", "durations"],
        "additionalProperties": false
      },
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    },
    {
      "name": "play_song",
      "description": "Request playback of a previously defined song on the Create drive base.",
      "kind": "publish-topic",
      "defaults": {
        "topic": "play_song",
        "message_type": "create_msgs/msg/PlaySong",
        "payload_map": {
          "song": "song"
        }
      },
      "parameters": {
        "type": "object",
        "properties": {
          "song": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4,
            "description": "Song slot to play on the Create base. Use the same ID supplied to define_song."
          }
        },
        "required": ["song"],
        "additionalProperties": false
      },
      "returns": {
        "type": "object",
        "properties": {
          "status": {"type": "string"},
          "topic": {"type": "string"},
          "message_type": {"type": "string"}
        },
        "required": ["status", "topic"],
        "additionalProperties": true
      }
    }
  ]
}

name = "imu"
description = "MPU6050 inertial measurement integration"

[[actions]]
type = "git_clone"
repo = "https://github.com/hiwad-aziz/ros2_mpu6050_driver.git"
dest = "ros2_mpu6050_driver"

[[actions]]
type = "run"
description = "Ensure mpu6050 header includes <array>"
command = """
HEADER="src/ros2_mpu6050_driver/include/mpu6050driver/mpu6050sensor.h"
if [ -f "$HEADER" ] && ! grep -q '#include <array>' "$HEADER"; then
  if grep -q '#include <string>' "$HEADER"; then
    sed -i '/#include <string>/a #include <array>' "$HEADER"
  else
    sed -i '1i #include <array>' "$HEADER"
  fi
fi
"""
optional = true

[[actions]]
type = "apt_install"
packages = ["libi2c-dev", "i2c-tools"]
update = true

[systemd]
description = "Psyched IMU Sensor"
after = ["network.target"]
restart = "on-failure"
restart_sec = 4
launch_command = """
set -euo pipefail
PARAM_FILE_VAL="${IMU_PARAM_FILE:-}"
if [ -n "$PARAM_FILE_VAL" ]; then
  exec ros2 launch mpu6050driver mpu6050driver_launch.py param_file:="${PARAM_FILE_VAL}"
else
  exec ros2 launch mpu6050driver mpu6050driver_launch.py
fi
"""
shutdown_command = """
set -euo pipefail
PATTERN="ros2 launch mpu6050driver mpu6050driver_launch.py"
TIMEOUT=${TIMEOUT:-10}
if ! pgrep -f "$PATTERN" >/dev/null 2>&1; then
  echo "[imu/shutdown] No matching processes found for pattern: $PATTERN"
  exit 0
fi

echo "[imu/shutdown] Sending SIGTERM to processes for: $PATTERN"
pkill -TERM -f "$PATTERN" || true

for ((i=0; i<TIMEOUT; i++)); do
  sleep 1
  if ! pgrep -f "$PATTERN" >/dev/null 2>&1; then
    echo "[imu/shutdown] All processes stopped"
    exit 0
  fi
done

echo "[imu/shutdown] Forcing SIGKILL for remaining processes"
pkill -KILL -f "$PATTERN" || true
"""

[unit.ear]
apt = [
    "python3-websockets",
    "python3-numpy",
]
pip = []
launch = "modules/ear/launch_unit.sh"
shutdown = "modules/ear/shutdown_unit.sh"
pilot_control = "modules/ear/pilot/components/EarModulePanel.tsx"

[unit.ear.ros]
workspace = "."
packages = ["ear"]

[pilot]
display_name = "Ear"
description = "Audio intake and VAD telemetry"
regimes = ["audio"]

[[pilot.topics]]
name = "/audio/raw"
type = "std_msgs/msg/ByteMultiArray"
access = "ro"
presentation = "oscilloscope"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }

[[pilot.topics]]
name = "/audio/speech_segment"
type = "std_msgs/msg/ByteMultiArray"
access = "ro"
presentation = "waveform"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }

[[pilot.topics]]
name = "/audio/speech_segment_accumulating"
type = "std_msgs/msg/ByteMultiArray"
access = "ro"
presentation = "waveform"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }

[[pilot.topics]]
name = "/audio/speech_accumulating"
type = "std_msgs/msg/ByteMultiArray"
access = "ro"
presentation = "waveform"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }

[[pilot.topics]]
name = "/audio/transcript/medium"
type = "psyched_msgs/msg/Transcript"
access = "ro"
presentation = "transcription"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }

[[pilot.topics]]
name = "/audio/transcript/long"
type = "psyched_msgs/msg/Transcript"
access = "ro"
presentation = "transcription"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }

[[pilot.topics]]
name = "/audio/transcription"
type = "psyched_msgs/msg/Transcript"
access = "ro"
presentation = "transcription"
qos = { history = "keep_last", depth = 5, reliability = "best_effort", durability = "volatile" }
